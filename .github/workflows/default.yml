name: GitHub Pages

on:
  push:
    branches:
      - main
      - "*.*"
  pull_request:
    branches:
      - main
      - "*.*"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Upgrade Pip
        run: |
          python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          python -m pip install -r ./requirements.txt

      - name: Build Documentation
        run: |
          sphinx-build -b html dsa build -c .

      - name: Deploy Documentation with Mike
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Determine version from the branch name
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            mike deploy draft --branch gh-pages --prefix ""
            mike set-default draft --branch gh-pages --prefix ""
          else
            VERSION="${GITHUB_REF##*/}"
            mike deploy "$VERSION" --branch gh-pages --prefix ""
            mike list --json | jq -r '.[].version' | sort -V | tail -n 1 | xargs -I {} mike set-default "{}" --branch gh-pages --prefix ""

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build
  deploy:
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Set Deployment URL
        run: echo "url=${{ steps.deployment.outputs.page_url }}" >> $GITHUB_ENV
